<Page x:Class="Ressurection.Views.SettingPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"  
      xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
      mc:Ignorable="d" 
      xmlns:prism="http://prismlibrary.com/"
      prism:ViewModelLocator.AutoWireViewModel="True"
      d:DesignHeight="300" d:DesignWidth="300" Margin="5"
      Background="{DynamicResource MaterialDesignPaper}"
      FontFamily="{DynamicResource MaterialDesignFont}"
      Name="SettingPageView"
      Title="SettingPage">

    <Page.Resources>
        <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignSubheadingTextBlock}" x:Key="MenuTextBlock">
            <Setter Property="Padding" Value="10,0,10,0"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}" x:Key="IconButton">
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
        </Style>
        <Style TargetType="ToggleButton" BasedOn="{StaticResource MaterialDesignSwitchAccentToggleButton}" x:Key="OnOffButton">
            <Setter Property="Width" Value="75"/>
            <Setter Property="Height" Value="25"/>
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="14*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="Process" Style="{DynamicResource MenuTextBlock}"/>
            <Button Grid.Column="1" Command="{Binding AddCommand}" Style="{DynamicResource IconButton}">
                <materialDesign:PackIcon Kind="Plus" />
            </Button>
            <Button Grid.Column="2" Command="{Binding RemoveCommand}" Style="{DynamicResource IconButton}">
                <materialDesign:PackIcon Kind="Minus" />
            </Button>
        </Grid>

        <ListBox Name="ProcessList" Grid.Row="1" Background="Transparent" ItemsSource="{Binding ProcessServiceViewModels}" SelectedItem="{Binding SelectedServiceViewModel}" HorizontalContentAlignment="Stretch" Padding="5">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1.5*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Style="{StaticResource MenuTextBlock}" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=Content.Name}"  Foreground="White"/>
                        <TextBlock Grid.Column="1" Style="{StaticResource MenuTextBlock}" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=Content.UpTime}" Foreground="White"/>
                        <ToggleButton Grid.Column="3"  Style="{StaticResource OnOffButton}" IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=Content.Onoff}"
                                      Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=Content.RunCommand}">
                        </ToggleButton>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Page>
